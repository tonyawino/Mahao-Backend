"""Add Property table

Revision ID: fff6fa88a70a
Revises: 9e149d6ee32e
Create Date: 2021-12-28 21:03:13.456644

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fff6fa88a70a'
down_revision = '9e149d6ee32e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('num_bed', sa.Integer(), nullable=False),
    sa.Column('num_bath', sa.Integer(), nullable=False),
    sa.Column('location_name', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('property_category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['property_category_id'], ['propertycategory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_description'), 'property', ['description'], unique=False)
    op.create_index(op.f('ix_property_id'), 'property', ['id'], unique=False)
    op.create_index(op.f('ix_property_is_enabled'), 'property', ['is_enabled'], unique=False)
    op.create_index(op.f('ix_property_is_verified'), 'property', ['is_verified'], unique=False)
    op.create_index(op.f('ix_property_location_name'), 'property', ['location_name'], unique=False)
    op.create_index(op.f('ix_property_num_bath'), 'property', ['num_bath'], unique=False)
    op.create_index(op.f('ix_property_num_bed'), 'property', ['num_bed'], unique=False)
    op.create_index(op.f('ix_property_price'), 'property', ['price'], unique=False)
    op.create_index(op.f('ix_property_title'), 'property', ['title'], unique=False)
    op.drop_index('ix_item_description', table_name='item')
    op.drop_index('ix_item_id', table_name='item')
    op.drop_index('ix_item_title', table_name='item')
    op.drop_table('item')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name='item_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='item_pkey')
    )
    op.create_index('ix_item_title', 'item', ['title'], unique=False)
    op.create_index('ix_item_id', 'item', ['id'], unique=False)
    op.create_index('ix_item_description', 'item', ['description'], unique=False)
    op.drop_index(op.f('ix_property_title'), table_name='property')
    op.drop_index(op.f('ix_property_price'), table_name='property')
    op.drop_index(op.f('ix_property_num_bed'), table_name='property')
    op.drop_index(op.f('ix_property_num_bath'), table_name='property')
    op.drop_index(op.f('ix_property_location_name'), table_name='property')
    op.drop_index(op.f('ix_property_is_verified'), table_name='property')
    op.drop_index(op.f('ix_property_is_enabled'), table_name='property')
    op.drop_index(op.f('ix_property_id'), table_name='property')
    op.drop_index(op.f('ix_property_description'), table_name='property')
    op.drop_table('property')
    # ### end Alembic commands ###
